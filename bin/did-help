#!/usr/bin/env bash

source "$(dirname $BASH_SOURCE)/../lib/use.bash"

main() {
  if [[ $# -eq 0 ]]; then
    overview
  else
    command="$1"; shift
    [[ $command =~ ^[a-zA-Z]+$ ]] ||
      die "Invalid help topic: '$command'"
    [[ $# -eq 0 ]] ||
      die "Unknown arguments: '$@'"
    can help:$command ||
      die "No help for command: '$command'"
    "help:$command"
  fi
}

overview() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


See:
* http://info.dockerid.com
* 'man did' for complete documentation.
* 'did help <command>' for specific doc.


Usage: did  <subcommands> [options]

Subcommands:
build   Add Docker ID layers to a 'docker build' image
cmd     Print a 'docker run' command for an entrypoint
cmds    List all commands (entrypoints) for an image
files   init files
help    Show command help
id      Print Docker ID data for an image to stdout
man     Show man page
run     Run the docker command for an entrypoint
search  Find existing 'did' images
shell   Open shell

Options:
--help -h         Show command help

...
}

help:build() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did build [options]


Options:
--push -p         push to docker hub

...
}

help:cmd() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did cmd <did-name>

Parameters:
did-name  *      docker id

...
}

help:cmds() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did cmds <did-name>

Parameters:
did-name  *      docker id

...
}

help:files() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did files [<file>+]

Parameters:
file     []  files

...
}

help:help() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did help <subcommands> [options]

Subcommands:
_complete  
build      
cmd        
cmds       
files      
id         
man        
run        
search     
shell      

Options:
--all         

...
}

help:id() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did id <did-name> [options]

Parameters:
did-name  *      docker id

Options:
--json -j         Show Docker ID info in JSON (default)
--yaml -y         Show Docker ID info in YAML

...
}

help:man() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did man <did-name>

Parameters:
did-name  *      docker id

...
}

help:run() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did run <did-name>

Parameters:
did-name  *      docker id

...
}

help:search() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did search [<term>]

Parameters:
term         The search parameter

...
}

help:shell() {
  cat <<...
did - A CLI tool for working with Docker ID container images.


Usage: did shell <did-name> [options]

Parameters:
did-name  *      docker id

Options:
--ash          Ash
--bash         Bash (default)
--zsh          Zsh

...
}


getopt:build() {
    GETOPT_SPEC="\
  did build [options]


Options:
--
p,push         push to docker hub
"
}

getopt:cmd() {
    GETOPT_SPEC="\
  did cmd <did-name>

Parameters:
did-name  *      docker id

"
}

getopt:cmds() {
    GETOPT_SPEC="\
  did cmds <did-name>

Parameters:
did-name  *      docker id

"
}

getopt:files() {
    GETOPT_SPEC="\
  did files [<file>+]

Parameters:
file     []  files

"
}

getopt:help() {
    GETOPT_SPEC="\
  did help <subcommands> [options]

Subcommands:
_complete  
build      
cmd        
cmds       
files      
id         
man        
run        
search     
shell      

Options:
--
all         
"
}

getopt:id() {
    GETOPT_SPEC="\
  did id <did-name> [options]

Parameters:
did-name  *      docker id

Options:
--
j,json         Show Docker ID info in JSON (default)
y,yaml         Show Docker ID info in YAML
"
}

getopt:man() {
    GETOPT_SPEC="\
  did man <did-name>

Parameters:
did-name  *      docker id

"
}

getopt:run() {
    GETOPT_SPEC="\
  did run <did-name>

Parameters:
did-name  *      docker id

"
}

getopt:search() {
    GETOPT_SPEC="\
  did search [<term>]

Parameters:
term         The search parameter

"
}

getopt:shell() {
    GETOPT_SPEC="\
  did shell <did-name> [options]

Parameters:
did-name  *      docker id

Options:
--
ash          Ash
bash         Bash (default)
zsh          Zsh
"
}


[[ $0 != "$BASH_SOURCE" ]] || main "$@"

# vim: set ft=sh lisp:
