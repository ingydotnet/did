did
===

  Docker ID CLI Tool

= Synopsis

  > did search swim
  > did id swim
  > did man swim
  > did cmds swim
  > did cmd swim
  > cat file.swim | did run swim --to=pod --complete

= Description

Docker ID container images (dids) are regular Docker container images that
report identification information about themselves. That is, you can ask an
image for information about what a container does and how to run it. This
information is available in both human readable and machine readable form.

The `did` command is a tool for more easily finding and interacting with these
images. You can do things like the following:

* Search for known dids
* Ask the did for a man page
* Ask the did for its dockerid info (in JSON or YAML)
* List the commands (entrypoints) of a did
* Print a `docker run ...` command for an entrypoint
* Run a did command

= Commands

- `build`

  This command helps you build a did image properly. First it runs a normal
  `docker build` command, then it copies over your Docker ID files and sets
  the Docker ID default entrypoint. It also tags your image. All in accordance
  to your `docker/id.yml` file.

- `cmd`

  Show the docker command for a did entry point.

- `cmds`

  List the entry points for a did.

- `id`

  Asks a did for its id data; either in YAML or JSON.

- `man`

  Shows the manpage for a did.

- `run`

  Run the docker command for a did entry point.

- `search`

  Search for known did images.

- `shell`

  Run a did image and shell into it.

- `upgrade`

  Upgrade the `did` tool.

= Installation

  git clone git@github.com:ingydotnet/did
  # Add this line to your Bash or Zsh startup:
  source /path/to/did/.rc

= See

See http://info.dockerid.com for for info on the Docker ID project.

= Copyright & License

Copyright 2016. Ingy d√∂t Net.

The MIT License (MIT)
